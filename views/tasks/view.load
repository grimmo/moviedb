{{'''
# License: Public Domain
# Author: Iceberg at 21cn dot com

With this generic.load file, you can use same function to serve two purposes.

= regular action
- ajax callback (when called with .load)

Example modified from http://www.web2py.com/AlterEgo/default/show/252:

def index():
    return dict(
		part1='hello world',
        	part2=LOAD(url=URL(r=request,f='auxiliary.load'),ajax=True))

def auxiliary():
    form=SQLFORM.factory(Field('name'))
    if form.accepts(request.vars):
        response.flash = 'ok' 
        return dict(message="Hello %s" % form.vars.name)
    return dict(form=form)

Notice:

- no need to set response.headers['web2py-response-flash']
- no need to return a string
even if the function is called via ajax.

'''}}
<h4 class="modal-title">{{ = heading_text }}</h4>
<span class="titolitrovati">           
<div class="progress">
<div id = "thepb" class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
<!-- <span class="sr-only">Please wait...</span> -->
</div>
<div id="stato">
<p id="statustext" class="text-center">Elaborazione in corso...</p>
</div>
<script>
$(document).ready(function () {
aggiorna_stato();
});
                 
function aggiorna_stato() {
var jqxhr = $.getJSON("{{=URL('moviedb','tasks','call/json',args=('status'),vars=dict(task=task_id))}}", function() {
  console.log( "get inviata" );
})
  .done(function(task) {
    console.log( "funzione completata. In teoria dovremmo avere l'oggetto task" );
    console.log(task.status);
    if (task.status == "COMPLETED") {
        $('#thepb').attr('aria-valuenow', '100').css('width','100%');
        $('#thepb').removeClass('active');
       jQuery('#spinner').hide();
       slug = task.result.replace(/['"]+/g, '');
       jQuery('#statustext').text('Aggiornamento dettagli completato con successo. Clicca <a href="{{ =URL(\'/moviedb)/film/'+slug+')}}">qui</a> per continuare';
       //redirect_to_result('/moviedb/film/'+slug);
  }
    else if (task.status == "FAILED") {
    jQuery('#statustext').text('Aggiornamento dettagli fallito. Il task risulta:'+task.status);
  }
    else {
        setTimeout(aggiorna_stato,5000);
  }
  })
  .fail(function(task) {
    console.log( "richiesta status task fallito" );
    console.log(task.status);
    $('#thepb').removeClass('active');
      jQuery('#statustext').text('Impossibile ottenere lo stato del task.');
  })
  .always(function() {
    console.log( "que lo scrivi a prescindere" );
  });
}
    
function redirect_to_result(url) {
    window.location.replace(url);
}
</script>
