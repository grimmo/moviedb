{{'''
# License: Public Domain
# Author: Iceberg at 21cn dot com

With this generic.load file, you can use same function to serve two purposes.

= regular action
- ajax callback (when called with .load)

Example modified from http://www.web2py.com/AlterEgo/default/show/252:

def index():
    return dict(
		part1='hello world',
        	part2=LOAD(url=URL(r=request,f='auxiliary.load'),ajax=True))

def auxiliary():
    form=SQLFORM.factory(Field('name'))
    if form.accepts(request.vars):
        response.flash = 'ok' 
        return dict(message="Hello %s" % form.vars.name)
    return dict(form=form)

Notice:

- no need to set response.headers['web2py-response-flash']
- no need to return a string
even if the function is called via ajax.

'''}}
<div class="navbar navbar-inverse navbar-fixed-top">    
    <div class='navbar-inner'>
        <div class='container'>
            <a class='brand'>MovieDB</a>
            <ul class='nav'>
                <li><a>Item 1</a></li>
                <li><a>Item 2</a></li>
            </ul>
            <!-- <form class="navbar-search pull-left" onsubmit="cerca(document.getElementById('chiavericerca').value); return false" >                 -->
            <form class="navbar-search pull-left" method="post">            
            <input id="chiavericerca" name="slug" type="text" class="search-query" placeholder="Cerca">
            <input type="submit" />
            <input type="hidden" name="_formname" value="cercaform" />            
            </form>
        </div>
    </div>
</div>
<div id="elenco">
    {{ if risultati_film: }}
    {{=risultati_film}}
    {{ elif risultati_attori: }}
    {{=risultati_attori}}    
    {{ pass }}
</div>
<script>
function cerca(chiave)
{
   $.post('cerca.json', {'chiave': chiave },
   function(data) {     
     $('#elenco').text(data);
       //display_risultati(data)
     });
}
</script>
